{"version":3,"file":"app.js","sources":["webpack:///._src_app.ts","webpack:///._src_app.scss","webpack:///./src/app.ts?87c2","webpack:///._src_store.ts"],"sourcesContent":["import { createApp } from 'vue'\nimport store from './store'\n\nimport './app.scss'\n\nconst App = createApp({\n  onShow (options) {},\n  // 入口组件不需要实现 render 方法，即使实现了也会被 taro 所覆盖\n})\n\nApp.use(store)\n\nexport default App\n","// extracted by mini-css-extract-plugin","import '@tarojs/plugin-platform-weapp/dist/runtime'\n\nimport { window } from '@tarojs/runtime'\nimport { createVue3App } from '@tarojs/plugin-framework-vue3/dist/runtime'\nimport { initPxTransform } from '@tarojs/taro'\nimport component from \"../node_modules/babel-loader/lib/index.js!./app.ts\"\n\nimport { h, createApp } from 'vue'\n\nvar config = {\"pages\":[\"pages/index/index\",\"pages/cate/index\",\"pages/cart/index\",\"pages/my/index\"],\"window\":{\"backgroundTextStyle\":\"light\",\"navigationBarBackgroundColor\":\"#fff\",\"navigationBarTitleText\":\"WeChat\",\"navigationBarTextStyle\":\"black\"},\"tabBar\":{\"custom\":true,\"color\":\"#000000\",\"selectedColor\":\"#DC143C\",\"backgroundColor\":\"#ffffff\",\"list\":[{\"pagePath\":\"pages/index/index\",\"selectedIconPath\":\"images/tabbar_home_on.png\",\"iconPath\":\"images/tabbar_home.png\",\"text\":\"首页\"},{\"pagePath\":\"pages/cate/index\",\"selectedIconPath\":\"images/tabbar_cate_on.png\",\"iconPath\":\"images/tabbar_cate.png\",\"text\":\"分类\"},{\"pagePath\":\"pages/cart/index\",\"selectedIconPath\":\"images/tabbar_cart_on.png\",\"iconPath\":\"images/tabbar_cart.png\",\"text\":\"购物车\"},{\"pagePath\":\"pages/my/index\",\"selectedIconPath\":\"images/tabbar_my_on.png\",\"iconPath\":\"images/tabbar_my.png\",\"text\":\"个人中心\"}]}};\nwindow.__taroAppConfig = config\nvar inst = App(createVue3App(component, h, config))\n\ninitPxTransform({\n  designWidth: 750,\n  deviceRatio: {\"640\":1.17,\"750\":1,\"828\":0.905}\n})\n","import { createStore } from 'vuex'\n\nconst state = {\n  selected: 0\n}\n\nconst mutations = {\n  SET_SELECTED (state, payload) {\n    state.selected = payload\n  }\n}\n\nconst actions = {\n  setSelected (context, index) {\n    context.commit('SET_SELECTED', index)\n  }\n}\n\nconst getters = {\n  getSelected(state) {\n    return state.selected\n  }\n}\n\nconst store = createStore({\n  state,\n  mutations,\n  actions,\n  getters\n})\n\nexport default store\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAKA;AAEA;;;;;;;;;;;ACZA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChBA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;A","sourceRoot":""}